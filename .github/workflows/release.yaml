
name: Release Generator

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  windows-build:
    runs-on: windows-latest
    strategy:
      matrix:
        features: ["lite", "standard"]
        triple: ['i686-pc-windows-msvc', 'x86_64-pc-windows-msvc', 'aarch64-pc-windows-msvc']
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust Toolchain
        run: rustup toolchain install 1.80.1
      - name: "Set Rust Toolchain"
        run: rustup default 1.80.1
      - name: Add Compile Target
        run: rustup target add ${{ matrix.triple }}
      - name: Cargo Build
        run: cargo build --features ${{ matrix.features }} --target ${{ matrix.triple }} --release -vv
      - name: Rename Release Artifact
        run: copy target/${{ matrix.triple }}/release/sh-toy.exe sh-toy-${{ matrix.features }}-${{ matrix.triple }}.exe
      - uses: actions/upload-artifact@v4
        with:
          name: sh-toy-${{ matrix.features }}-${{ matrix.triple }}
          path: sh-toy-${{ matrix.features }}-${{ matrix.triple }}.exe

  macos-build:
    runs-on: macos-latest
    strategy:
      matrix:
        features: ["lite", "standard"]
        triple: ['aarch64-apple-darwin', 'x86_64-apple-darwin']
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust Toolchain
        run: rustup toolchain install 1.80.1
      - name: "Set Rust Toolchain"
        run: rustup default 1.80.1
      - name: Add Compile Target
        run: rustup target add ${{ matrix.triple }}
      - name: Cargo Build
        run: cargo build --features ${{ matrix.features }} --target ${{ matrix.triple }} --release -vv
      - name: Rename Release Artifact
        run: cp target/${{ matrix.triple }}/release/sh-toy sh-toy-${{ matrix.features }}-${{ matrix.triple }}
      - uses: actions/upload-artifact@v4
        with:
          name: sh-toy-${{ matrix.features }}-${{ matrix.triple }}
          path: sh-toy-${{ matrix.features }}-${{ matrix.triple }}

  linux-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        features: [lite, standard]
        triple: [x86_64-unknown-linux-gnu, i686-unknown-linux-gnu, x86_64-unknown-linux-musl, i686-unknown-linux-musl]
    steps:
      - uses: actions/checkout@v4
      - name: Install GCC Multi-lib
        run: sudo apt update && sudo apt install gcc-multilib g++-multilib lib32z1-dev
      - name: Install Rust Toolchain
        run: rustup toolchain install 1.80.1
      - name: "Set Rust Toolchain"
        run: rustup default 1.80.1
      - name: Add Compile Target
        run: rustup target add ${{ matrix.triple }}
      - name: Cargo Build
        run: cargo build --features ${{ matrix.features }} --target ${{ matrix.triple }} --release -vv
      - name: Rename Release Artifact
        run: cp target/${{ matrix.triple }}/release/sh-toy sh-toy-${{ matrix.features }}-${{ matrix.triple }}
      - uses: actions/upload-artifact@v4
        with:
          name: sh-toy-${{ matrix.features }}-${{ matrix.triple }}
          path: sh-toy-${{ matrix.features }}-${{ matrix.triple }}

  release-gen:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: ['windows-build','macos-build','linux-build']
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            **/sh-toy-*